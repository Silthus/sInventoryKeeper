buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '6.0.0'
    id 'kr.entree.spigradle' version '2.0.0'
    id 'java'
    id 'idea'
    id 'jacoco'
}

apply from: "$rootDir/gradle/jacoco.gradle"
apply from: "$rootDir/gradle/publish.gradle"

sourceCompatibility = 8
targetCompatibility = 8

ext {
    //Define one of the supported mc versions
    mcVersion = project.property("mcVersion")
    packageName = project.property("packageName")
}

group project.property("group")

spigot {
    pluginName = project.property("pluginName")
    authors = [project.property("author")]
    apiVersion = project.property("apiVersion")
    load = STARTUP
    depends = ['sLib']
    main = "net.silthus.inventorykeeper.InventoryKeeper"
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}

archivesBaseName = project.property("pluginName")

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()

    maven { url 'https://jitpack.io' }

    spigot()

    maven {
        name = 'slib'
        url = 'https://maven.pkg.github.com/silthus/slib'
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
    }

    maven {
        name = 'configlib'
        url = 'https://maven.pkg.github.com/silthus/configlib'
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
            password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
        }
    }

    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }

    //Add your repositories here
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }

    maven { url = "https://repo.codemc.org/repository/maven-public" }
}

dependencies {
    compileOnly lombok()
    annotationProcessor lombok()

    compileOnly spigot(mcVersion)

    //Add dependencies here
    implementation 'net.silthus:slib:1.3.0'
    implementation 'co.aikar:acf-bukkit:0.5.0-SNAPSHOT'

    implementation 'org.bstats:bstats-bukkit:1.7'

    //Test dependencies
    testImplementation 'com.google.jimfs:jimfs:1.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.2'
    testImplementation "org.mockito:mockito-core:3.+"
    testImplementation 'com.github.seeseemelk:MockBukkit:v1.15-SNAPSHOT'
    testImplementation 'org.assertj:assertj-core:3.16.1'
    testImplementation lombok()
    testAnnotationProcessor lombok()
}

shadowJar {
    classifier = ''
    dependencies {
        include(dependency('co.aikar:acf-bukkit:'))
        include(dependency('org.bstats:bstats:'))
    }
    relocate 'co.aikar.commands', "${packageName}.acf"
    relocate 'co.aikar.locales', "${packageName}.locales"
    relocate 'org.bstats', "${packageName}.bstats"
}

tasks.build.dependsOn(shadowJar)
tasks.publish.dependsOn(shadowJar)

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    ignoreFailures = true
}

processResources {
    project.properties.put("version", this.version)
    expand project.properties
}

task copyPluginYaml(type: Copy, dependsOn: generateSpigotDescription) {
    from(new File(generateSpigotDescription.temporaryDir, "plugin.yml"))
    into(sourceSets.test.resources.srcDirs[0])
}

tasks.test.dependsOn(copyPluginYaml)

defaultTasks 'build'
